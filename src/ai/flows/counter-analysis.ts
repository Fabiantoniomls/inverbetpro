'use server';

/**
 * @fileOverview Implements the counter-analysis flow.
 * 
 * This flow takes an existing analysis and a new, external analysis, 
 * and provides a synthesized critique and second opinion from the perspective 
 * of a different AI persona, "iaedge".
 * 
 * - counterAnalysis - The main function for the flow.
 */

import { ai } from '@/ai/genkit';
import { z } from 'genkit';

const CounterAnalysisInputSchema = z.object({
    originalAnalysis: z.string().describe("The original analysis markdown text generated by 'Inverapuestas Pro'."),
    externalAnalysis: z.string().describe("A new analysis from an external source, provided by the user."),
});
export type CounterAnalysisInput = z.infer<typeof CounterAnalysisInputSchema>;

const CounterAnalysisOutputSchema = z.object({
    counterAnalysis: z.string().describe("The synthesized counter-analysis markdown text generated by 'iaedge'."),
});
export type CounterAnalysisOutput = z.infer<typeof CounterAnalysisOutputSchema>;


export async function counterAnalysis(input: CounterAnalysisInput): Promise<CounterAnalysisOutput> {
  return counterAnalysisFlow(input);
}


const counterAnalysisPrompt = ai.definePrompt({
  name: 'counterAnalysisPrompt',
  input: { schema: CounterAnalysisInputSchema },
  output: { schema: CounterAnalysisOutputSchema },
  prompt: `Eres "iaedge" ü§ñ, un analista comparativo de √©lite especializado en fusionar m√∫ltiples perspectivas de inversi√≥n deportiva. Tu proceso es riguroso y l√≥gico. Se te han proporcionado dos an√°lisis: uno de "Inverapuestas Pro" (el original) y otro de una fuente externa.

**Tu Misi√≥n en 2 Pasos:**

**Paso 1: Deconstrucci√≥n L√≥gica (An√°lisis Interno):**
Primero, deconstruye mentalmente cada an√°lisis en sus componentes fundamentales:
*   **Conclusi√≥n principal:** ¬øCu√°l es la predicci√≥n final? (Ej: "Victoria del Jugador A").
*   **Premisas de apoyo:** ¬øQu√© argumentos o datos se usan para justificar esa conclusi√≥n? (Ej: "Dominio en la superficie", "H2H favorable").
*   **Riesgos o Contraargumentos:** ¬øQu√© debilidades o factores en contra se mencionan? (Ej: "Bajo % de primer servicio", "Fatiga reciente").

**Paso 2: Informe de S√≠ntesis Comparativa (Tu Salida en Markdown):**
Basado en tu deconstrucci√≥n interna, ahora genera un informe en espa√±ol y formato Markdown que mapee las relaciones l√≥gicas y ofrezca una conclusi√≥n sintetizada. Usa esta estructura OBLIGATORIA:

1.  **Veredicto General:**
    *   Comienza con un p√°rrafo conciso. ¬øLas conclusiones principales coinciden o chocan? ¬øQu√© an√°lisis parece m√°s robusto y por qu√©?

2.  **Mapeo de Relaciones L√≥gicas:**
    *   **Puntos de Acuerdo (ü§ù):** Lista los argumentos o conclusiones en los que ambos an√°lisis est√°n de acuerdo.
    *   **Puntos de Divergencia (ü§î):** Describe los puntos clave de conflicto, explicando la diferencia en el razonamiento.
    *   **Argumentos √önicos de Inverapuestas Pro (üí°):** Lista los puntos clave que solo el an√°lisis original mencion√≥.
    *   **Argumentos √önicos del An√°lisis Externo (üÜï):** Lista los puntos clave que solo el an√°lisis externo aport√≥.

3.  **Tabla de Valor Consolidada:**
    *   Crea una **√∫nica** "TABLA DE APUESTAS DE VALOR" en Markdown.
    *   **CR√çTICO:** Incluye **SOLAMENTE** las selecciones donde, tras tu an√°lisis comparativo, sigues viendo un consenso o una fuerte evidencia de valor positivo (EV > 0). S√© conservador. Si un an√°lisis desacredita fuertemente al otro, es posible que no haya ninguna apuesta de valor consolidada.

4.  **Conclusi√≥n Final de "iaedge":**
    *   Finaliza con tu recomendaci√≥n experta. ¬øQu√© acci√≥n sugieres? ¬øSe deber√≠a mantener la apuesta original, modificarla, o quiz√°s no hacer nada? Justifica tu veredicto final bas√°ndote en la s√≠ntesis.

**An√°lisis Original (de Inverapuestas Pro):**
\`\`\`markdown
{{{originalAnalysis}}}
\`\`\`

**An√°lisis Externo (proporcionado por el usuario):**
\`\`\`markdown
{{{externalAnalysis}}}
\`\`\`

Ahora, ejecuta tu proceso de dos pasos y genera el informe de s√≠ntesis comparativa como "iaedge".`,
    config: {
      temperature: 0.2
    }
});


const counterAnalysisFlow = ai.defineFlow(
  {
    name: 'counterAnalysisFlow',
    inputSchema: CounterAnalysisInputSchema,
    outputSchema: CounterAnalysisOutputSchema,
  },
  async (input) => {
    const { output } = await counterAnalysisPrompt(input);
    if (!output) {
      throw new Error("No se pudo generar el contra-an√°lisis.");
    }
    return { counterAnalysis: output.counterAnalysis };
  }
);
